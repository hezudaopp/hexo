vnote_backup_file_826537664 /Users/jawinton/github/hexo/source/_posts/服务提供者框架的思考.md
---
title: 服务提供者框架的思考
date: 2019-01-05 20:06:03
tags:
- Service Provider Framework
- Design Pattern
- Dependency Reverse
---

服务提供者框架具体实现就不多说，主要有个问题，为何在服务提供者框架中提供者不可少？也就是说如果把提供者注册API注册不是Prodiver，而是Service有何不妥？这样的实现不也是多态的吗？

私人愚见，主要问题在于：如果通过不同Service接口的实现类的静态工厂方法或者构造函数来返回对象，那么注册Service的类必须依赖所有的Service实现类，因为静态方法不支持多态，而构造函数的话需要依赖具体实现类。如此，在编写注册类的时候，Service的实现就必须存在。这违背了**对添加开放，对修改封闭**原则，每次新增一种Service实现都需要去改变注册类的实现，而且，在编写注册类代码时，是不会知道有多少种Service的实现。

服务提供者框架目标是**依赖反转**（Dependency Reverse），如果说每新增一种Service，都需要修改注册类的代码，服务提供者框架实现也就不太可靠的。